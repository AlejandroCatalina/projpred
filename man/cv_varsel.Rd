% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cv_varsel.R
\name{cv_varsel}
\alias{cv_varsel}
\title{Variable selection for generalized linear models with cross-validation}
\usage{
cv_varsel(fit, fits = NULL, ...)
}
\arguments{
\item{fit}{A \link[=stanreg-objects]{stanreg} object.}

\item{fits}{An array with cross-validated stanfits and the respective
test datasets returned by \link[=stanreg-objects]{cv_fit}(fit).
If not provided, \link[=stanreg-objects]{cv_fit}(fit) is called to
get the array.}

\item{...}{Optional arguments. Possible arguments and their defaults are:
\describe{
 \item{\code{ns = min(400, [number of draws])}}{
   Number of draws used in the variable selection.
   Cannot be larger than the number of draws in the full model.}
 \item{\code{nc = 0}}{
   If nonzero, a clustering with \code{nc} clusters is performed for
   the draws and the cluster centers are used in the variable selection
   instead of the actual draws.}
 \item{\code{nv = min(ncol(x) - 1, rankMatrix(x))}}{
   Maximum number of variables to be used in the projection (incl. intercept).
   Cannot be larger than \code{min(ncol(x) - 1, rankMatrix(x))}.}
 \item{\code{verbose = FALSE}}{
   If \code{verbose = TRUE}, prints information about the progress of the
   variable selection.}
}}
}
\value{
The original \link[=stanreg-objects]{stanreg} object augmented with an element 'varsel',
which is a list containing the following elements:
\describe{
 \item{\code{chosen}}{The order in which the variables were added to the submodel.}
 \item{\code{pctch}}{Percentage of cross-validation runs that included the given
   variable to a model of given size.}
 \item{\code{stats}}{An array with statistics of the submodel performance.}
 \item{\code{family}}{A \code{\link{family}}-object.}
}
}
\description{
Perform the projection predictive variable selection for a generalized
linear model fitted with rstanarm.
}
\examples{
\dontrun{
### Usage with stanreg objects
fit <- stan_glm(y~x, binomial())
fits <- kfold(fit)
fit_v <- cv_varsel(fit, fits)
plot_varsel(fit_v)
}

}

